# Generated by wayland-nim-scanner 1.23.1
{.warning[UnusedImport]:off.}
import wayland/native/common
import wayland/protocols/wayland/code as wayland_code
import wayland/protocols/stable/xdgShell/code as xdgShell_code

var xdgDialogV1_types: array[2, ptr Interface]
type XdgDialogV1* = object
type XdgWmDialogV1* = object

let
  xdg_wm_dialog_v1_requests {.exportc.} = [
    Message(name: "destroy", signature: "", types: addr xdg_dialog_v1_types[0]),
    Message(name: "get_xdg_dialog", signature: "no", types: addr xdg_dialog_v1_types[0]),
  ]

  xdg_wm_dialog_v1_interface* {.exportc.} = Interface(
    name: "xdg_wm_dialog_v1",
    version: 1,
    method_count: 2,
    methods: addr xdg_wm_dialog_v1_requests[0],
  )

  xdg_dialog_v1_requests {.exportc.} = [
    Message(name: "destroy", signature: "", types: addr xdg_dialog_v1_types[0]),
    Message(name: "set_modal", signature: "", types: addr xdg_dialog_v1_types[0]),
    Message(name: "unset_modal", signature: "", types: addr xdg_dialog_v1_types[0]),
  ]

  xdg_dialog_v1_interface* {.exportc.} = Interface(
    name: "xdg_dialog_v1",
    version: 1,
    method_count: 3,
    methods: addr xdg_dialog_v1_requests[0],
  )


type XdgWmDialogV1Error* {.size: sizeof(uint32).} = enum
  error_already_used = 0
func since*(e: XdgWmDialogV1Error): int =
  case e
  of error_already_used: 1
proc isValid*(e: XdgWmDialogV1Error; version: int): bool =
  version >= e.since

type XdgWmDialogV1Request* {.size: sizeof(uint32).} = enum
  XdgWmDialogV1Request_destroy
  XdgWmDialogV1Request_get_xdg_dialog
proc since*(e: XdgWmDialogV1Request): int =
  case e
  of XdgWmDialogV1Request_destroy: 1
  of XdgWmDialogV1Request_get_xdg_dialog: 1

type XdgDialogV1Request* {.size: sizeof(uint32).} = enum
  XdgDialogV1Request_destroy
  XdgDialogV1Request_set_modal
  XdgDialogV1Request_unset_modal
proc since*(e: XdgDialogV1Request): int =
  case e
  of XdgDialogV1Request_destroy: 1
  of XdgDialogV1Request_set_modal: 1
  of XdgDialogV1Request_unset_modal: 1

xdgDialogV1_types = [
  addr xdg_dialog_v1_interface,
  addr xdg_toplevel_interface,
]


