# Generated by wayland-nim-scanner 1.23.1
{.warning[UnusedImport]:off.}
import wayland/native/client
import wayland/native/common
import code
export code

## The fractional_scale_v1 CLIENT protocol
## #######################################
## 
## Interfaces
## ==========
## 
## * wp_fractional_scale_manager_v1
## * wp_fractional_scale_v1
## 
## Copyright
## =========
## 
## Copyright Â© 2022 Kenny Levinsen
## 
## Permission is hereby granted, free of charge, to any person obtaining a
## copy of this software and associated documentation files (the "Software"),
## to deal in the Software without restriction, including without limitation
## the rights to use, copy, modify, merge, publish, distribute, sublicense,
## and/or sell copies of the Software, and to permit persons to whom the
## Software is furnished to do so, subject to the following conditions:
## 
## The above copyright notice and this permission notice (including the next
## paragraph) shall be included in all copies or substantial portions of the
## Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
## THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
## DEALINGS IN THE SOFTWARE.
## 

proc setUserData*(wpFractionalScaleManagerV1: ptr WpFractionalScaleManagerV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](wpFractionalScaleManagerV1).set_user_data(user_data)
proc getUserData*(wpFractionalScaleManagerV1: ptr WpFractionalScaleManagerV1): pointer {.inline.} =
  cast[ptr Proxy](wpFractionalScaleManagerV1).get_user_data()
proc getVersion*(wpFractionalScaleManagerV1: ptr WpFractionalScaleManagerV1): uint32 {.inline.} =
  cast[ptr Proxy](wpFractionalScaleManagerV1).get_version()
proc destroy*(wpFractionalScaleManagerV1: ptr WpFractionalScaleManagerV1) {.inline.} =
  ## unbind the fractional surface scale interface
  ## 
  ## Informs the server that the client will not be using this protocol
  ## object anymore. This does not affect any other objects,
  ## wp_fractional_scale_v1 objects included.
  ## 
  cast[ptr Proxy](wpFractionalScaleManagerV1).marshal_flags(WpFractionalScaleManagerV1Request_destroy.ord, nil, cast[ptr Proxy](wpFractionalScaleManagerV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
proc getFractionalScale*(wpFractionalScaleManagerV1: ptr WpFractionalScaleManagerV1; surface: ptr Surface): ptr WpFractionalScaleV1 {.inline.} =
  ## extend surface interface for scale information
  ## 
  ## Create an add-on object for the the wl_surface to let the compositor
  ## request fractional scales. If the given wl_surface already has a
  ## wp_fractional_scale_v1 object associated, the fractional_scale_exists
  ## protocol error is raised.
  ## 
  cast[ptr WpFractionalScaleV1](cast[ptr Proxy](wpFractionalScaleManagerV1).marshal_flags(WpFractionalScaleManagerV1Request_get_fractional_scale.ord, addr wp_fractional_scale_v1_interface, cast[ptr Proxy](wpFractionalScaleManagerV1).get_version(), 0, nil, surface))
type WpFractionalScaleV1Listener* = object
  preferredScale*: proc(
    data: pointer;
    wpFractionalScaleV1: ptr WpFractionalScaleV1;
    scale: uint32;
  ) {.nimcall.}
proc addListener*(wpFractionalScaleV1: ptr WpFractionalScaleV1; listener: ptr WpFractionalScaleV1Listener; data: pointer): int {.inline.} =
  cast[ptr Proxy](wpFractionalScaleV1).add_listener(listener, data)

proc setUserData*(wpFractionalScaleV1: ptr WpFractionalScaleV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](wpFractionalScaleV1).set_user_data(user_data)
proc getUserData*(wpFractionalScaleV1: ptr WpFractionalScaleV1): pointer {.inline.} =
  cast[ptr Proxy](wpFractionalScaleV1).get_user_data()
proc getVersion*(wpFractionalScaleV1: ptr WpFractionalScaleV1): uint32 {.inline.} =
  cast[ptr Proxy](wpFractionalScaleV1).get_version()
proc destroy*(wpFractionalScaleV1: ptr WpFractionalScaleV1) {.inline.} =
  ## remove surface scale information for surface
  ## 
  ## Destroy the fractional scale object. When this object is destroyed,
  ## preferred_scale events will no longer be sent.
  ## 
  cast[ptr Proxy](wpFractionalScaleV1).marshal_flags(WpFractionalScaleV1Request_destroy.ord, nil, cast[ptr Proxy](wpFractionalScaleV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
