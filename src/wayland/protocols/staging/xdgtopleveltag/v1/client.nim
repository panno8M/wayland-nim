# Generated by wayland-nim-scanner 1.23.1
{.warning[UnusedImport]:off.}
import wayland/native/client
import wayland/native/common
import wayland/protocols/stable/xdgShell/client as xdgShell_client
import code
export code

## The xdg_toplevel_tag_v1 CLIENT protocol
## #######################################
## 
## Interfaces
## ==========
## 
## * xdg_toplevel_tag_manager_v1
## 
## Copyright
## =========
## 
## Copyright Â© 2024 Xaver Hugl
## 
## Permission is hereby granted, free of charge, to any person obtaining a
## copy of this software and associated documentation files (the "Software"),
## to deal in the Software without restriction, including without limitation
## the rights to use, copy, modify, merge, publish, distribute, sublicense,
## and/or sell copies of the Software, and to permit persons to whom the
## Software is furnished to do so, subject to the following conditions:
## 
## The above copyright notice and this permission notice (including the next
## paragraph) shall be included in all copies or substantial portions of the
## Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
## THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
## DEALINGS IN THE SOFTWARE.
## 

proc setUserData*(xdgToplevelTagManagerV1: ptr XdgToplevelTagManagerV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](xdgToplevelTagManagerV1).set_user_data(user_data)
proc getUserData*(xdgToplevelTagManagerV1: ptr XdgToplevelTagManagerV1): pointer {.inline.} =
  cast[ptr Proxy](xdgToplevelTagManagerV1).get_user_data()
proc getVersion*(xdgToplevelTagManagerV1: ptr XdgToplevelTagManagerV1): uint32 {.inline.} =
  cast[ptr Proxy](xdgToplevelTagManagerV1).get_version()
proc destroy*(xdgToplevelTagManagerV1: ptr XdgToplevelTagManagerV1) {.inline.} =
  ## destroy toplevel tag object
  ## 
  ## Destroy this toplevel tag manager object. This request has no other
  ## effects.
  ## 
  cast[ptr Proxy](xdgToplevelTagManagerV1).marshal_flags(XdgToplevelTagManagerV1Request_destroy.ord, nil, cast[ptr Proxy](xdgToplevelTagManagerV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
proc setToplevelTag*(xdgToplevelTagManagerV1: ptr XdgToplevelTagManagerV1; toplevel: ptr XdgToplevel; tag: cstring) {.inline.} =
  ## set tag
  ## 
  ## Set a tag for a toplevel. The tag may be shown to the user in UI, so
  ## it's preferable for it to be human readable, but it must be suitable
  ## for configuration files and should not be translated.
  ## Suitable tags would for example be "main window", "settings",
  ## "e-mail composer" or similar.
  ## 
  ## The tag does not need to be unique across applications, and the client
  ## may set the same tag for multiple windows, for example if the user has
  ## opened the same UI twice. How the potentially resulting conflicts are
  ## handled is compositor policy.
  ## 
  ## The client should set the tag as part of the initial commit on the
  ## associated toplevel, but it may set it at any time afterwards as well,
  ## for example if the purpose of the toplevel changes.
  ## 
  cast[ptr Proxy](xdgToplevelTagManagerV1).marshal_flags(XdgToplevelTagManagerV1Request_set_toplevel_tag.ord, nil, cast[ptr Proxy](xdgToplevelTagManagerV1).get_version(), 0, toplevel, tag)
proc setToplevelDescription*(xdgToplevelTagManagerV1: ptr XdgToplevelTagManagerV1; toplevel: ptr XdgToplevel; description: cstring) {.inline.} =
  ## set description
  ## 
  ## Set a description for a toplevel. This description may be shown to the
  ## user in UI or read by a screen reader for accessibility purposes, and
  ## should be translated.
  ## It is recommended to make the description the translation of the tag.
  ## 
  ## The client should set the description as part of the initial commit on
  ## the associated toplevel, but it may set it at any time afterwards as
  ## well, for example if the purpose of the toplevel changes.
  ## 
  cast[ptr Proxy](xdgToplevelTagManagerV1).marshal_flags(XdgToplevelTagManagerV1Request_set_toplevel_description.ord, nil, cast[ptr Proxy](xdgToplevelTagManagerV1).get_version(), 0, toplevel, description)
