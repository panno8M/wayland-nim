# Generated by wayland-nim-scanner 1.23.1
{.warning[UnusedImport]:off.}
import wayland/native/client
import wayland/native/common
import code
export code

## The tearing_control_v1 CLIENT protocol
## ######################################
## 
## Interfaces
## ==========
## 
## * wp_tearing_control_manager_v1
## * wp_tearing_control_v1
## 
## Copyright
## =========
## 
## Copyright Â© 2021 Xaver Hugl
## 
## Permission is hereby granted, free of charge, to any person obtaining a
## copy of this software and associated documentation files (the "Software"),
## to deal in the Software without restriction, including without limitation
## the rights to use, copy, modify, merge, publish, distribute, sublicense,
## and/or sell copies of the Software, and to permit persons to whom the
## Software is furnished to do so, subject to the following conditions:
## 
## The above copyright notice and this permission notice (including the next
## paragraph) shall be included in all copies or substantial portions of the
## Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
## THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
## DEALINGS IN THE SOFTWARE.
## 

proc setUserData*(wpTearingControlManagerV1: ptr WpTearingControlManagerV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](wpTearingControlManagerV1).set_user_data(user_data)
proc getUserData*(wpTearingControlManagerV1: ptr WpTearingControlManagerV1): pointer {.inline.} =
  cast[ptr Proxy](wpTearingControlManagerV1).get_user_data()
proc getVersion*(wpTearingControlManagerV1: ptr WpTearingControlManagerV1): uint32 {.inline.} =
  cast[ptr Proxy](wpTearingControlManagerV1).get_version()
proc destroy*(wpTearingControlManagerV1: ptr WpTearingControlManagerV1) {.inline.} =
  ## destroy tearing control factory object
  ## 
  ## Destroy this tearing control factory object. Other objects, including
  ## wp_tearing_control_v1 objects created by this factory, are not affected
  ## by this request.
  ## 
  cast[ptr Proxy](wpTearingControlManagerV1).marshal_flags(WpTearingControlManagerV1Request_destroy.ord, nil, cast[ptr Proxy](wpTearingControlManagerV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
proc getTearingControl*(wpTearingControlManagerV1: ptr WpTearingControlManagerV1; surface: ptr Surface): ptr WpTearingControlV1 {.inline.} =
  ## extend surface interface for tearing control
  ## 
  ## Instantiate an interface extension for the given wl_surface to request
  ## asynchronous page flips for presentation.
  ## 
  ## If the given wl_surface already has a wp_tearing_control_v1 object
  ## associated, the tearing_control_exists protocol error is raised.
  ## 
  cast[ptr WpTearingControlV1](cast[ptr Proxy](wpTearingControlManagerV1).marshal_flags(WpTearingControlManagerV1Request_get_tearing_control.ord, addr wp_tearing_control_v1_interface, cast[ptr Proxy](wpTearingControlManagerV1).get_version(), 0, nil, surface))
proc setUserData*(wpTearingControlV1: ptr WpTearingControlV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](wpTearingControlV1).set_user_data(user_data)
proc getUserData*(wpTearingControlV1: ptr WpTearingControlV1): pointer {.inline.} =
  cast[ptr Proxy](wpTearingControlV1).get_user_data()
proc getVersion*(wpTearingControlV1: ptr WpTearingControlV1): uint32 {.inline.} =
  cast[ptr Proxy](wpTearingControlV1).get_version()
proc setPresentationHint*(wpTearingControlV1: ptr WpTearingControlV1; hint: uint32) {.inline.} =
  ## set presentation hint
  ## 
  ## Set the presentation hint for the associated wl_surface. This state is
  ## double-buffered, see wl_surface.commit.
  ## 
  ## The compositor is free to dynamically respect or ignore this hint based
  ## on various conditions like hardware capabilities, surface state and
  ## user preferences.
  ## 
  cast[ptr Proxy](wpTearingControlV1).marshal_flags(WpTearingControlV1Request_set_presentation_hint.ord, nil, cast[ptr Proxy](wpTearingControlV1).get_version(), 0, hint)
proc destroy*(wpTearingControlV1: ptr WpTearingControlV1) {.inline.} =
  ## destroy tearing control object
  ## 
  ## Destroy this surface tearing object and revert the presentation hint to
  ## vsync. The change will be applied on the next wl_surface.commit.
  ## 
  cast[ptr Proxy](wpTearingControlV1).marshal_flags(WpTearingControlV1Request_destroy.ord, nil, cast[ptr Proxy](wpTearingControlV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
