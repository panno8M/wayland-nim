# Generated by wayland-nim-scanner 1.23.1
{.warning[UnusedImport]:off.}
import wayland/native/client
import wayland/native/common
import code
export code

## The pointer_gestures_unstable_v1 CLIENT protocol
## ################################################
## 
## Interfaces
## ==========
## 
## * zwp_pointer_gestures_v1
## * zwp_pointer_gesture_swipe_v1
## * zwp_pointer_gesture_pinch_v1
## * zwp_pointer_gesture_hold_v1

proc setUserData*(zwpPointerGesturesV1: ptr ZwpPointerGesturesV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](zwpPointerGesturesV1).set_user_data(user_data)
proc getUserData*(zwpPointerGesturesV1: ptr ZwpPointerGesturesV1): pointer {.inline.} =
  cast[ptr Proxy](zwpPointerGesturesV1).get_user_data()
proc getVersion*(zwpPointerGesturesV1: ptr ZwpPointerGesturesV1): uint32 {.inline.} =
  cast[ptr Proxy](zwpPointerGesturesV1).get_version()
proc destroy*(zwpPointerGesturesV1: ptr ZwpPointerGesturesV1) {.inline.} =
  destroy cast[ptr Proxy](zwpPointerGesturesV1)
proc getSwipeGesture*(zwpPointerGesturesV1: ptr ZwpPointerGesturesV1; pointer: ptr Pointer): ptr ZwpPointerGestureSwipeV1 {.inline.} =
  ## get swipe gesture
  ## 
  ## Create a swipe gesture object. See the
  ## 	wl_pointer_gesture_swipe interface for details.
  ## 
  cast[ptr ZwpPointerGestureSwipeV1](cast[ptr Proxy](zwpPointerGesturesV1).marshal_flags(ZwpPointerGesturesV1Request_get_swipe_gesture.ord, addr zwp_pointer_gesture_swipe_v1_interface, cast[ptr Proxy](zwpPointerGesturesV1).get_version(), 0, nil, pointer))
proc getPinchGesture*(zwpPointerGesturesV1: ptr ZwpPointerGesturesV1; pointer: ptr Pointer): ptr ZwpPointerGesturePinchV1 {.inline.} =
  ## get pinch gesture
  ## 
  ## Create a pinch gesture object. See the
  ## 	wl_pointer_gesture_pinch interface for details.
  ## 
  cast[ptr ZwpPointerGesturePinchV1](cast[ptr Proxy](zwpPointerGesturesV1).marshal_flags(ZwpPointerGesturesV1Request_get_pinch_gesture.ord, addr zwp_pointer_gesture_pinch_v1_interface, cast[ptr Proxy](zwpPointerGesturesV1).get_version(), 0, nil, pointer))
proc release*(zwpPointerGesturesV1: ptr ZwpPointerGesturesV1) {.inline.} =
  ## destroy the pointer gesture object
  ## 
  ## Destroy the pointer gesture object. Swipe, pinch and hold objects
  ## 	created via this gesture object remain valid.
  ## 
  cast[ptr Proxy](zwpPointerGesturesV1).marshal_flags(ZwpPointerGesturesV1Request_release.ord, nil, cast[ptr Proxy](zwpPointerGesturesV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
proc getHoldGesture*(zwpPointerGesturesV1: ptr ZwpPointerGesturesV1; pointer: ptr Pointer): ptr ZwpPointerGestureHoldV1 {.inline.} =
  ## get hold gesture
  ## 
  ## Create a hold gesture object. See the
  ## 	wl_pointer_gesture_hold interface for details.
  ## 
  cast[ptr ZwpPointerGestureHoldV1](cast[ptr Proxy](zwpPointerGesturesV1).marshal_flags(ZwpPointerGesturesV1Request_get_hold_gesture.ord, addr zwp_pointer_gesture_hold_v1_interface, cast[ptr Proxy](zwpPointerGesturesV1).get_version(), 0, nil, pointer))
type ZwpPointerGestureSwipeV1Listener* = object
  begin*: proc(
    data: pointer;
    zwpPointerGestureSwipeV1: ptr ZwpPointerGestureSwipeV1;
    serial: uint32;
    time: uint32;
    surface: ptr Surface;
    fingers: uint32;
  ) {.nimcall.}
  update*: proc(
    data: pointer;
    zwpPointerGestureSwipeV1: ptr ZwpPointerGestureSwipeV1;
    time: uint32;
    dx: Fixed;
    dy: Fixed;
  ) {.nimcall.}
  `end`*: proc(
    data: pointer;
    zwpPointerGestureSwipeV1: ptr ZwpPointerGestureSwipeV1;
    serial: uint32;
    time: uint32;
    cancelled: int32;
  ) {.nimcall.}
proc addListener*(zwpPointerGestureSwipeV1: ptr ZwpPointerGestureSwipeV1; listener: ptr ZwpPointerGestureSwipeV1Listener; data: pointer): int {.inline.} =
  cast[ptr Proxy](zwpPointerGestureSwipeV1).add_listener(listener, data)

proc setUserData*(zwpPointerGestureSwipeV1: ptr ZwpPointerGestureSwipeV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](zwpPointerGestureSwipeV1).set_user_data(user_data)
proc getUserData*(zwpPointerGestureSwipeV1: ptr ZwpPointerGestureSwipeV1): pointer {.inline.} =
  cast[ptr Proxy](zwpPointerGestureSwipeV1).get_user_data()
proc getVersion*(zwpPointerGestureSwipeV1: ptr ZwpPointerGestureSwipeV1): uint32 {.inline.} =
  cast[ptr Proxy](zwpPointerGestureSwipeV1).get_version()
proc destroy*(zwpPointerGestureSwipeV1: ptr ZwpPointerGestureSwipeV1) {.inline.} =
  ## destroy the pointer swipe gesture object
  cast[ptr Proxy](zwpPointerGestureSwipeV1).marshal_flags(ZwpPointerGestureSwipeV1Request_destroy.ord, nil, cast[ptr Proxy](zwpPointerGestureSwipeV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
type ZwpPointerGesturePinchV1Listener* = object
  begin*: proc(
    data: pointer;
    zwpPointerGesturePinchV1: ptr ZwpPointerGesturePinchV1;
    serial: uint32;
    time: uint32;
    surface: ptr Surface;
    fingers: uint32;
  ) {.nimcall.}
  update*: proc(
    data: pointer;
    zwpPointerGesturePinchV1: ptr ZwpPointerGesturePinchV1;
    time: uint32;
    dx: Fixed;
    dy: Fixed;
    scale: Fixed;
    rotation: Fixed;
  ) {.nimcall.}
  `end`*: proc(
    data: pointer;
    zwpPointerGesturePinchV1: ptr ZwpPointerGesturePinchV1;
    serial: uint32;
    time: uint32;
    cancelled: int32;
  ) {.nimcall.}
proc addListener*(zwpPointerGesturePinchV1: ptr ZwpPointerGesturePinchV1; listener: ptr ZwpPointerGesturePinchV1Listener; data: pointer): int {.inline.} =
  cast[ptr Proxy](zwpPointerGesturePinchV1).add_listener(listener, data)

proc setUserData*(zwpPointerGesturePinchV1: ptr ZwpPointerGesturePinchV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](zwpPointerGesturePinchV1).set_user_data(user_data)
proc getUserData*(zwpPointerGesturePinchV1: ptr ZwpPointerGesturePinchV1): pointer {.inline.} =
  cast[ptr Proxy](zwpPointerGesturePinchV1).get_user_data()
proc getVersion*(zwpPointerGesturePinchV1: ptr ZwpPointerGesturePinchV1): uint32 {.inline.} =
  cast[ptr Proxy](zwpPointerGesturePinchV1).get_version()
proc destroy*(zwpPointerGesturePinchV1: ptr ZwpPointerGesturePinchV1) {.inline.} =
  ## destroy the pinch gesture object
  cast[ptr Proxy](zwpPointerGesturePinchV1).marshal_flags(ZwpPointerGesturePinchV1Request_destroy.ord, nil, cast[ptr Proxy](zwpPointerGesturePinchV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
type ZwpPointerGestureHoldV1Listener* = object
  begin*: proc(
    data: pointer;
    zwpPointerGestureHoldV1: ptr ZwpPointerGestureHoldV1;
    serial: uint32;
    time: uint32;
    surface: ptr Surface;
    fingers: uint32;
  ) {.nimcall.}
  `end`*: proc(
    data: pointer;
    zwpPointerGestureHoldV1: ptr ZwpPointerGestureHoldV1;
    serial: uint32;
    time: uint32;
    cancelled: int32;
  ) {.nimcall.}
proc addListener*(zwpPointerGestureHoldV1: ptr ZwpPointerGestureHoldV1; listener: ptr ZwpPointerGestureHoldV1Listener; data: pointer): int {.inline.} =
  cast[ptr Proxy](zwpPointerGestureHoldV1).add_listener(listener, data)

proc setUserData*(zwpPointerGestureHoldV1: ptr ZwpPointerGestureHoldV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](zwpPointerGestureHoldV1).set_user_data(user_data)
proc getUserData*(zwpPointerGestureHoldV1: ptr ZwpPointerGestureHoldV1): pointer {.inline.} =
  cast[ptr Proxy](zwpPointerGestureHoldV1).get_user_data()
proc getVersion*(zwpPointerGestureHoldV1: ptr ZwpPointerGestureHoldV1): uint32 {.inline.} =
  cast[ptr Proxy](zwpPointerGestureHoldV1).get_version()
proc destroy*(zwpPointerGestureHoldV1: ptr ZwpPointerGestureHoldV1) {.inline.} =
  ## destroy the hold gesture object
  cast[ptr Proxy](zwpPointerGestureHoldV1).marshal_flags(ZwpPointerGestureHoldV1Request_destroy.ord, nil, cast[ptr Proxy](zwpPointerGestureHoldV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
