# Generated by wayland-nim-scanner 1.23.1
{.warning[UnusedImport]:off.}
import wayland/native/server
import wayland/native/common
import code
export code

## The zwp_linux_explicit_synchronization_unstable_v1 SERVER protocol
## ##################################################################
## 
## Interfaces
## ==========
## 
## * zwp_linux_explicit_synchronization_v1
## * zwp_linux_surface_synchronization_v1
## * zwp_linux_buffer_release_v1
## 
## Copyright
## =========
## 
## Copyright 2016 The Chromium Authors.
## Copyright 2017 Intel Corporation
## Copyright 2018 Collabora, Ltd
## 
## Permission is hereby granted, free of charge, to any person obtaining a
## copy of this software and associated documentation files (the "Software"),
## to deal in the Software without restriction, including without limitation
## the rights to use, copy, modify, merge, publish, distribute, sublicense,
## and/or sell copies of the Software, and to permit persons to whom the
## Software is furnished to do so, subject to the following conditions:
## 
## The above copyright notice and this permission notice (including the next
## paragraph) shall be included in all copies or substantial portions of the
## Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
## THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
## DEALINGS IN THE SOFTWARE.
## 

type ZwpLinuxExplicitSynchronizationV1Interface* = object
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}
  getSynchronization*: proc(
    client: ptr Client;
    resource: ptr Resource;
    id: uint32;
    surface: ptr Resource;
  ) {.nimcall.}

type ZwpLinuxSurfaceSynchronizationV1Interface* = object
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}
  setAcquireFence*: proc(
    client: ptr Client;
    resource: ptr Resource;
    fd: int32;
  ) {.nimcall.}
  getRelease*: proc(
    client: ptr Client;
    resource: ptr Resource;
    release: uint32;
  ) {.nimcall.}

proc zwpLinuxBufferReleaseV1SendFencedRelease*(resource: ptr Resource; fence: int32) {.inline, exportc: "zwp_linux_buffer_release_v1_send_fenced_release".} =
  ## Sends an fenced_release event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *fence*: fence for last operation on buffer
  resource.post_event(ZwpLinuxBufferReleaseV1Event_fenced_release.ord, fence)

proc zwpLinuxBufferReleaseV1SendImmediateRelease*(resource: ptr Resource) {.inline, exportc: "zwp_linux_buffer_release_v1_send_immediate_release".} =
  ## Sends an immediate_release event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpLinuxBufferReleaseV1Event_immediate_release.ord)

