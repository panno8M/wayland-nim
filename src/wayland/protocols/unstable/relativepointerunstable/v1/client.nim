# Generated by wayland-nim-scanner 1.23.1
{.warning[UnusedImport]:off.}
import wayland/native/client
import wayland/native/common
import code
export code

## The relative_pointer_unstable_v1 CLIENT protocol
## ################################################
## 
## Interfaces
## ==========
## 
## * zwp_relative_pointer_manager_v1
## * zwp_relative_pointer_v1
## 
## Copyright
## =========
## 
## Copyright © 2014      Jonas Ådahl
## Copyright © 2015      Red Hat Inc.
## 
## Permission is hereby granted, free of charge, to any person obtaining a
## copy of this software and associated documentation files (the "Software"),
## to deal in the Software without restriction, including without limitation
## the rights to use, copy, modify, merge, publish, distribute, sublicense,
## and/or sell copies of the Software, and to permit persons to whom the
## Software is furnished to do so, subject to the following conditions:
## 
## The above copyright notice and this permission notice (including the next
## paragraph) shall be included in all copies or substantial portions of the
## Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
## THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
## DEALINGS IN THE SOFTWARE.
## 

proc setUserData*(zwpRelativePointerManagerV1: ptr ZwpRelativePointerManagerV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](zwpRelativePointerManagerV1).set_user_data(user_data)
proc getUserData*(zwpRelativePointerManagerV1: ptr ZwpRelativePointerManagerV1): pointer {.inline.} =
  cast[ptr Proxy](zwpRelativePointerManagerV1).get_user_data()
proc getVersion*(zwpRelativePointerManagerV1: ptr ZwpRelativePointerManagerV1): uint32 {.inline.} =
  cast[ptr Proxy](zwpRelativePointerManagerV1).get_version()
proc destroy*(zwpRelativePointerManagerV1: ptr ZwpRelativePointerManagerV1) {.inline.} =
  ## destroy the relative pointer manager object
  ## 
  ## Used by the client to notify the server that it will no longer use this
  ## 	relative pointer manager object.
  ## 
  cast[ptr Proxy](zwpRelativePointerManagerV1).marshal_flags(ZwpRelativePointerManagerV1Request_destroy.ord, nil, cast[ptr Proxy](zwpRelativePointerManagerV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
proc getRelativePointer*(zwpRelativePointerManagerV1: ptr ZwpRelativePointerManagerV1; pointer: ptr Pointer): ptr ZwpRelativePointerV1 {.inline.} =
  ## get a relative pointer object
  ## 
  ## Create a relative pointer interface given a wl_pointer object. See the
  ## 	wp_relative_pointer interface for more details.
  ## 
  cast[ptr ZwpRelativePointerV1](cast[ptr Proxy](zwpRelativePointerManagerV1).marshal_flags(ZwpRelativePointerManagerV1Request_get_relative_pointer.ord, addr zwp_relative_pointer_v1_interface, cast[ptr Proxy](zwpRelativePointerManagerV1).get_version(), 0, nil, pointer))
type ZwpRelativePointerV1Listener* = object
  relativeMotion*: proc(
    data: pointer;
    zwpRelativePointerV1: ptr ZwpRelativePointerV1;
    utimeHi: uint32;
    utimeLo: uint32;
    dx: Fixed;
    dy: Fixed;
    dxUnaccel: Fixed;
    dyUnaccel: Fixed;
  ) {.nimcall.}
proc addListener*(zwpRelativePointerV1: ptr ZwpRelativePointerV1; listener: ptr ZwpRelativePointerV1Listener; data: pointer): int {.inline.} =
  cast[ptr Proxy](zwpRelativePointerV1).add_listener(listener, data)

proc setUserData*(zwpRelativePointerV1: ptr ZwpRelativePointerV1; userData: pointer) {.inline.} =
  cast[ptr Proxy](zwpRelativePointerV1).set_user_data(user_data)
proc getUserData*(zwpRelativePointerV1: ptr ZwpRelativePointerV1): pointer {.inline.} =
  cast[ptr Proxy](zwpRelativePointerV1).get_user_data()
proc getVersion*(zwpRelativePointerV1: ptr ZwpRelativePointerV1): uint32 {.inline.} =
  cast[ptr Proxy](zwpRelativePointerV1).get_version()
proc destroy*(zwpRelativePointerV1: ptr ZwpRelativePointerV1) {.inline.} =
  ## release the relative pointer object
  cast[ptr Proxy](zwpRelativePointerV1).marshal_flags(ZwpRelativePointerV1Request_destroy.ord, nil, cast[ptr Proxy](zwpRelativePointerV1).get_version(), WL_MARSHAL_FLAG_DESTROY)
