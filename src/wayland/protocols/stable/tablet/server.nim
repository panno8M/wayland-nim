# Generated by wayland-nim-scanner 1.23.1
import wayland/native/server
import wayland/native/common
import code
export code

## The tablet_v2 SERVER protocol
## #############################
## 
## Interfaces
## ==========
## 
## * zwp_tablet_manager_v2
## * zwp_tablet_seat_v2
## * zwp_tablet_tool_v2
## * zwp_tablet_v2
## * zwp_tablet_pad_ring_v2
## * zwp_tablet_pad_strip_v2
## * zwp_tablet_pad_group_v2
## * zwp_tablet_pad_v2
## * zwp_tablet_pad_dial_v2
## 
## Copyright
## =========
## 
## Copyright 2014 © Stephen "Lyude" Chandler Paul
## Copyright 2015-2024 © Red Hat, Inc.
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice (including the
## next paragraph) shall be included in all copies or substantial
## portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
## NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
## BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
## ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
## CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
## SOFTWARE.
## 

type ZwpTabletManagerV2Interface* = object
  getTabletSeat*: proc(
    client: ptr Client;
    resource: ptr Resource;
    tabletSeat: uint32;
    seat: ptr Resource;
  ) {.nimcall.}
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}

type ZwpTabletSeatV2Interface* = object
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}

proc zwpTabletSeatV2SendTabletAdded*(resource: ptr Resource; id: ptr Resource) {.inline, exportc: "zwp_tablet_seat_v2_send_tablet_added".} =
  ## Sends an tablet_added event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *id*: the newly added graphics tablet
  resource.post_event(ZwpTabletSeatV2Event_tablet_added.ord, id)

proc zwpTabletSeatV2SendToolAdded*(resource: ptr Resource; id: ptr Resource) {.inline, exportc: "zwp_tablet_seat_v2_send_tool_added".} =
  ## Sends an tool_added event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *id*: the newly added tablet tool
  resource.post_event(ZwpTabletSeatV2Event_tool_added.ord, id)

proc zwpTabletSeatV2SendPadAdded*(resource: ptr Resource; id: ptr Resource) {.inline, exportc: "zwp_tablet_seat_v2_send_pad_added".} =
  ## Sends an pad_added event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *id*: the newly added pad
  resource.post_event(ZwpTabletSeatV2Event_pad_added.ord, id)

type ZwpTabletToolV2Interface* = object
  setCursor*: proc(
    client: ptr Client;
    resource: ptr Resource;
    serial: uint32;
    surface: ptr Resource;
    hotspotX: int32;
    hotspotY: int32;
  ) {.nimcall.}
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}

proc zwpTabletToolV2SendType*(resource: ptr Resource; toolType: uint32) {.inline, exportc: "zwp_tablet_tool_v2_send_type".} =
  ## Sends an type event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *tool_type*: the physical tool type
  resource.post_event(ZwpTabletToolV2Event_type.ord, toolType)

proc zwpTabletToolV2SendHardwareSerial*(resource: ptr Resource; hardwareSerialHi: uint32; hardwareSerialLo: uint32) {.inline, exportc: "zwp_tablet_tool_v2_send_hardware_serial".} =
  ## Sends an hardware_serial event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *hardware_serial_hi*: the unique serial number of the tool, most significant bits
  ## * *hardware_serial_lo*: the unique serial number of the tool, least significant bits
  resource.post_event(ZwpTabletToolV2Event_hardware_serial.ord, hardwareSerialHi, hardwareSerialLo)

proc zwpTabletToolV2SendHardwareIdWacom*(resource: ptr Resource; hardwareIdHi: uint32; hardwareIdLo: uint32) {.inline, exportc: "zwp_tablet_tool_v2_send_hardware_id_wacom".} =
  ## Sends an hardware_id_wacom event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *hardware_id_hi*: the hardware id, most significant bits
  ## * *hardware_id_lo*: the hardware id, least significant bits
  resource.post_event(ZwpTabletToolV2Event_hardware_id_wacom.ord, hardwareIdHi, hardwareIdLo)

proc zwpTabletToolV2SendCapability*(resource: ptr Resource; capability: uint32) {.inline, exportc: "zwp_tablet_tool_v2_send_capability".} =
  ## Sends an capability event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *capability*: the capability
  resource.post_event(ZwpTabletToolV2Event_capability.ord, capability)

proc zwpTabletToolV2SendDone*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_tool_v2_send_done".} =
  ## Sends an done event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletToolV2Event_done.ord)

proc zwpTabletToolV2SendRemoved*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_tool_v2_send_removed".} =
  ## Sends an removed event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletToolV2Event_removed.ord)

proc zwpTabletToolV2SendProximityIn*(resource: ptr Resource; serial: uint32; tablet: ptr Resource; surface: ptr Resource) {.inline, exportc: "zwp_tablet_tool_v2_send_proximity_in".} =
  ## Sends an proximity_in event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *tablet*: The tablet the tool is in proximity of
  ## * *surface*: The current surface the tablet tool is over
  resource.post_event(ZwpTabletToolV2Event_proximity_in.ord, serial, tablet, surface)

proc zwpTabletToolV2SendProximityOut*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_tool_v2_send_proximity_out".} =
  ## Sends an proximity_out event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletToolV2Event_proximity_out.ord)

proc zwpTabletToolV2SendDown*(resource: ptr Resource; serial: uint32) {.inline, exportc: "zwp_tablet_tool_v2_send_down".} =
  ## Sends an down event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletToolV2Event_down.ord, serial)

proc zwpTabletToolV2SendUp*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_tool_v2_send_up".} =
  ## Sends an up event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletToolV2Event_up.ord)

proc zwpTabletToolV2SendMotion*(resource: ptr Resource; x: Fixed; y: Fixed) {.inline, exportc: "zwp_tablet_tool_v2_send_motion".} =
  ## Sends an motion event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *x*: surface-local x coordinate
  ## * *y*: surface-local y coordinate
  resource.post_event(ZwpTabletToolV2Event_motion.ord, x, y)

proc zwpTabletToolV2SendPressure*(resource: ptr Resource; pressure: uint32) {.inline, exportc: "zwp_tablet_tool_v2_send_pressure".} =
  ## Sends an pressure event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *pressure*: The current pressure value
  resource.post_event(ZwpTabletToolV2Event_pressure.ord, pressure)

proc zwpTabletToolV2SendDistance*(resource: ptr Resource; distance: uint32) {.inline, exportc: "zwp_tablet_tool_v2_send_distance".} =
  ## Sends an distance event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *distance*: The current distance value
  resource.post_event(ZwpTabletToolV2Event_distance.ord, distance)

proc zwpTabletToolV2SendTilt*(resource: ptr Resource; tiltX: Fixed; tiltY: Fixed) {.inline, exportc: "zwp_tablet_tool_v2_send_tilt".} =
  ## Sends an tilt event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *tilt_x*: The current value of the X tilt axis
  ## * *tilt_y*: The current value of the Y tilt axis
  resource.post_event(ZwpTabletToolV2Event_tilt.ord, tiltX, tiltY)

proc zwpTabletToolV2SendRotation*(resource: ptr Resource; degrees: Fixed) {.inline, exportc: "zwp_tablet_tool_v2_send_rotation".} =
  ## Sends an rotation event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *degrees*: The current rotation of the Z axis
  resource.post_event(ZwpTabletToolV2Event_rotation.ord, degrees)

proc zwpTabletToolV2SendSlider*(resource: ptr Resource; position: int32) {.inline, exportc: "zwp_tablet_tool_v2_send_slider".} =
  ## Sends an slider event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *position*: The current position of slider
  resource.post_event(ZwpTabletToolV2Event_slider.ord, position)

proc zwpTabletToolV2SendWheel*(resource: ptr Resource; degrees: Fixed; clicks: int32) {.inline, exportc: "zwp_tablet_tool_v2_send_wheel".} =
  ## Sends an wheel event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *degrees*: The wheel delta in degrees
  ## * *clicks*: The wheel delta in discrete clicks
  resource.post_event(ZwpTabletToolV2Event_wheel.ord, degrees, clicks)

proc zwpTabletToolV2SendButton*(resource: ptr Resource; serial: uint32; button: uint32; state: uint32) {.inline, exportc: "zwp_tablet_tool_v2_send_button".} =
  ## Sends an button event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *button*: The button whose state has changed
  ## * *state*: Whether the button was pressed or released
  resource.post_event(ZwpTabletToolV2Event_button.ord, serial, button, state)

proc zwpTabletToolV2SendFrame*(resource: ptr Resource; time: uint32) {.inline, exportc: "zwp_tablet_tool_v2_send_frame".} =
  ## Sends an frame event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *time*: The time of the event with millisecond granularity
  resource.post_event(ZwpTabletToolV2Event_frame.ord, time)

type ZwpTabletV2Interface* = object
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}

proc zwpTabletV2SendName*(resource: ptr Resource; name: cstring) {.inline, exportc: "zwp_tablet_v2_send_name".} =
  ## Sends an name event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *name*: the device name
  resource.post_event(ZwpTabletV2Event_name.ord, name)

proc zwpTabletV2SendId*(resource: ptr Resource; vid: uint32; pid: uint32) {.inline, exportc: "zwp_tablet_v2_send_id".} =
  ## Sends an id event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *vid*: vendor id
  ## * *pid*: product id
  resource.post_event(ZwpTabletV2Event_id.ord, vid, pid)

proc zwpTabletV2SendPath*(resource: ptr Resource; path: cstring) {.inline, exportc: "zwp_tablet_v2_send_path".} =
  ## Sends an path event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *path*: path to local device
  resource.post_event(ZwpTabletV2Event_path.ord, path)

proc zwpTabletV2SendDone*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_v2_send_done".} =
  ## Sends an done event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletV2Event_done.ord)

proc zwpTabletV2SendRemoved*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_v2_send_removed".} =
  ## Sends an removed event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletV2Event_removed.ord)

proc zwpTabletV2SendBustype*(resource: ptr Resource; bustype: uint32) {.inline, exportc: "zwp_tablet_v2_send_bustype".} =
  ## Sends an bustype event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *bustype*: bus type
  resource.post_event(ZwpTabletV2Event_bustype.ord, bustype)

type ZwpTabletPadRingV2Interface* = object
  setFeedback*: proc(
    client: ptr Client;
    resource: ptr Resource;
    description: cstring;
    serial: uint32;
  ) {.nimcall.}
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}

proc zwpTabletPadRingV2SendSource*(resource: ptr Resource; source: uint32) {.inline, exportc: "zwp_tablet_pad_ring_v2_send_source".} =
  ## Sends an source event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *source*: the event source
  resource.post_event(ZwpTabletPadRingV2Event_source.ord, source)

proc zwpTabletPadRingV2SendAngle*(resource: ptr Resource; degrees: Fixed) {.inline, exportc: "zwp_tablet_pad_ring_v2_send_angle".} =
  ## Sends an angle event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *degrees*: the current angle in degrees
  resource.post_event(ZwpTabletPadRingV2Event_angle.ord, degrees)

proc zwpTabletPadRingV2SendStop*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_pad_ring_v2_send_stop".} =
  ## Sends an stop event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletPadRingV2Event_stop.ord)

proc zwpTabletPadRingV2SendFrame*(resource: ptr Resource; time: uint32) {.inline, exportc: "zwp_tablet_pad_ring_v2_send_frame".} =
  ## Sends an frame event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *time*: timestamp with millisecond granularity
  resource.post_event(ZwpTabletPadRingV2Event_frame.ord, time)

type ZwpTabletPadStripV2Interface* = object
  setFeedback*: proc(
    client: ptr Client;
    resource: ptr Resource;
    description: cstring;
    serial: uint32;
  ) {.nimcall.}
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}

proc zwpTabletPadStripV2SendSource*(resource: ptr Resource; source: uint32) {.inline, exportc: "zwp_tablet_pad_strip_v2_send_source".} =
  ## Sends an source event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *source*: the event source
  resource.post_event(ZwpTabletPadStripV2Event_source.ord, source)

proc zwpTabletPadStripV2SendPosition*(resource: ptr Resource; position: uint32) {.inline, exportc: "zwp_tablet_pad_strip_v2_send_position".} =
  ## Sends an position event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *position*: the current position
  resource.post_event(ZwpTabletPadStripV2Event_position.ord, position)

proc zwpTabletPadStripV2SendStop*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_pad_strip_v2_send_stop".} =
  ## Sends an stop event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletPadStripV2Event_stop.ord)

proc zwpTabletPadStripV2SendFrame*(resource: ptr Resource; time: uint32) {.inline, exportc: "zwp_tablet_pad_strip_v2_send_frame".} =
  ## Sends an frame event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *time*: timestamp with millisecond granularity
  resource.post_event(ZwpTabletPadStripV2Event_frame.ord, time)

type ZwpTabletPadGroupV2Interface* = object
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}

proc zwpTabletPadGroupV2SendButtons*(resource: ptr Resource; buttons: ptr Array) {.inline, exportc: "zwp_tablet_pad_group_v2_send_buttons".} =
  ## Sends an buttons event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *buttons*: buttons in this group
  resource.post_event(ZwpTabletPadGroupV2Event_buttons.ord, buttons)

proc zwpTabletPadGroupV2SendRing*(resource: ptr Resource; ring: ptr Resource) {.inline, exportc: "zwp_tablet_pad_group_v2_send_ring".} =
  ## Sends an ring event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletPadGroupV2Event_ring.ord, ring)

proc zwpTabletPadGroupV2SendStrip*(resource: ptr Resource; strip: ptr Resource) {.inline, exportc: "zwp_tablet_pad_group_v2_send_strip".} =
  ## Sends an strip event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletPadGroupV2Event_strip.ord, strip)

proc zwpTabletPadGroupV2SendModes*(resource: ptr Resource; modes: uint32) {.inline, exportc: "zwp_tablet_pad_group_v2_send_modes".} =
  ## Sends an modes event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *modes*: the number of modes
  resource.post_event(ZwpTabletPadGroupV2Event_modes.ord, modes)

proc zwpTabletPadGroupV2SendDone*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_pad_group_v2_send_done".} =
  ## Sends an done event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletPadGroupV2Event_done.ord)

proc zwpTabletPadGroupV2SendModeSwitch*(resource: ptr Resource; time: uint32; serial: uint32; mode: uint32) {.inline, exportc: "zwp_tablet_pad_group_v2_send_mode_switch".} =
  ## Sends an mode_switch event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *time*: the time of the event with millisecond granularity
  ## * *mode*: the new mode of the pad
  resource.post_event(ZwpTabletPadGroupV2Event_mode_switch.ord, time, serial, mode)

proc zwpTabletPadGroupV2SendDial*(resource: ptr Resource; dial: ptr Resource) {.inline, exportc: "zwp_tablet_pad_group_v2_send_dial".} =
  ## Sends an dial event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletPadGroupV2Event_dial.ord, dial)

type ZwpTabletPadV2Interface* = object
  setFeedback*: proc(
    client: ptr Client;
    resource: ptr Resource;
    button: uint32;
    description: cstring;
    serial: uint32;
  ) {.nimcall.}
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}

proc zwpTabletPadV2SendGroup*(resource: ptr Resource; padGroup: ptr Resource) {.inline, exportc: "zwp_tablet_pad_v2_send_group".} =
  ## Sends an group event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletPadV2Event_group.ord, padGroup)

proc zwpTabletPadV2SendPath*(resource: ptr Resource; path: cstring) {.inline, exportc: "zwp_tablet_pad_v2_send_path".} =
  ## Sends an path event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *path*: path to local device
  resource.post_event(ZwpTabletPadV2Event_path.ord, path)

proc zwpTabletPadV2SendButtons*(resource: ptr Resource; buttons: uint32) {.inline, exportc: "zwp_tablet_pad_v2_send_buttons".} =
  ## Sends an buttons event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *buttons*: the number of buttons
  resource.post_event(ZwpTabletPadV2Event_buttons.ord, buttons)

proc zwpTabletPadV2SendDone*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_pad_v2_send_done".} =
  ## Sends an done event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletPadV2Event_done.ord)

proc zwpTabletPadV2SendButton*(resource: ptr Resource; time: uint32; button: uint32; state: uint32) {.inline, exportc: "zwp_tablet_pad_v2_send_button".} =
  ## Sends an button event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *time*: the time of the event with millisecond granularity
  ## * *button*: the index of the button that changed state
  resource.post_event(ZwpTabletPadV2Event_button.ord, time, button, state)

proc zwpTabletPadV2SendEnter*(resource: ptr Resource; serial: uint32; tablet: ptr Resource; surface: ptr Resource) {.inline, exportc: "zwp_tablet_pad_v2_send_enter".} =
  ## Sends an enter event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *serial*: serial number of the enter event
  ## * *tablet*: the tablet the pad is attached to
  ## * *surface*: surface the pad is focused on
  resource.post_event(ZwpTabletPadV2Event_enter.ord, serial, tablet, surface)

proc zwpTabletPadV2SendLeave*(resource: ptr Resource; serial: uint32; surface: ptr Resource) {.inline, exportc: "zwp_tablet_pad_v2_send_leave".} =
  ## Sends an leave event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *serial*: serial number of the leave event
  ## * *surface*: surface the pad is no longer focused on
  resource.post_event(ZwpTabletPadV2Event_leave.ord, serial, surface)

proc zwpTabletPadV2SendRemoved*(resource: ptr Resource) {.inline, exportc: "zwp_tablet_pad_v2_send_removed".} =
  ## Sends an removed event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  resource.post_event(ZwpTabletPadV2Event_removed.ord)

type ZwpTabletPadDialV2Interface* = object
  setFeedback*: proc(
    client: ptr Client;
    resource: ptr Resource;
    description: cstring;
    serial: uint32;
  ) {.nimcall.}
  destroy*: proc(
    client: ptr Client;
    resource: ptr Resource;
  ) {.nimcall.}

proc zwpTabletPadDialV2SendDelta*(resource: ptr Resource; value120: int32) {.inline, exportc: "zwp_tablet_pad_dial_v2_send_delta".} =
  ## Sends an delta event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *value120*: rotation distance as fraction of 120
  resource.post_event(ZwpTabletPadDialV2Event_delta.ord, value120)

proc zwpTabletPadDialV2SendFrame*(resource: ptr Resource; time: uint32) {.inline, exportc: "zwp_tablet_pad_dial_v2_send_frame".} =
  ## Sends an frame event to the client owning the resource.
  ## 
  ## **params**:
  ## * *resource*: The client's resource
  ## * *time*: timestamp with millisecond granularity
  resource.post_event(ZwpTabletPadDialV2Event_frame.ord, time)

